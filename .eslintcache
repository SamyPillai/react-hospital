[{"/Users/swamy/Desktop/Hospitals/react-hospital/src/index.js":"1","/Users/swamy/Desktop/Hospitals/react-hospital/src/reportWebVitals.js":"2","/Users/swamy/Desktop/Hospitals/react-hospital/src/App.js":"3","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListPatientsComponent.jsx":"4","/Users/swamy/Desktop/Hospitals/react-hospital/src/services/PatientsService.js":"5","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/FooterComponent.jsx":"6","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/HeaderComponent.jsx":"7","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreatePatientsComponent.jsx":"8","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/UpdatePatientsComponent.jsx":"9","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/TabNav.js":"10","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListPatientsHealthComponent.jsx":"11","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreatePatientsHealthComponent.jsx":"12","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListPatientsDiseasesComponent.jsx":"13","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreatePatientsDiseaseComponent.jsx":"14","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListEmployeesComponent.jsx":"15","/Users/swamy/Desktop/Hospitals/react-hospital/src/services/EmployeesService.js":"16","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateEmployeesComponent.jsx":"17","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListEmployeesSpecializationComponent.jsx":"18","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateEmployeesSpecializationComponent.jsx":"19","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListRoomsComponent.jsx":"20","/Users/swamy/Desktop/Hospitals/react-hospital/src/services/AdminService.js":"21","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateRoomsComponent.jsx":"22","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListRoomsAvailabilityComponent.jsx":"23","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateRoomsAvailabilityComponent.jsx":"24","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListBedsComponent.jsx":"25","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateBedsComponent.jsx":"26","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListBedsAvailabilityComponent.jsx":"27","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateBedsAvailabilityComponent.jsx":"28"},{"size":550,"mtime":1609185379926,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1608730953972,"results":"31","hashOfConfig":"30"},{"size":7150,"mtime":1610410624720,"results":"32","hashOfConfig":"30"},{"size":3808,"mtime":1609904897736,"results":"33","hashOfConfig":"30"},{"size":2148,"mtime":1609882126795,"results":"34","hashOfConfig":"30"},{"size":349,"mtime":1608754116431,"results":"35","hashOfConfig":"30"},{"size":441,"mtime":1608755141931,"results":"36","hashOfConfig":"30"},{"size":10913,"mtime":1609267212441,"results":"37","hashOfConfig":"30"},{"size":14252,"mtime":1609638159022,"results":"38","hashOfConfig":"30"},{"size":902,"mtime":1609245346742,"results":"39","hashOfConfig":"30"},{"size":4725,"mtime":1609901057670,"results":"40","hashOfConfig":"30"},{"size":6536,"mtime":1609901420263,"results":"41","hashOfConfig":"30"},{"size":4139,"mtime":1609900503288,"results":"42","hashOfConfig":"30"},{"size":5012,"mtime":1609900821093,"results":"43","hashOfConfig":"30"},{"size":5726,"mtime":1609873990178,"results":"44","hashOfConfig":"30"},{"size":1490,"mtime":1609896148527,"results":"45","hashOfConfig":"30"},{"size":13774,"mtime":1609882128600,"results":"46","hashOfConfig":"30"},{"size":4384,"mtime":1609898171340,"results":"47","hashOfConfig":"30"},{"size":5249,"mtime":1610149100118,"results":"48","hashOfConfig":"30"},{"size":4065,"mtime":1610171209302,"results":"49","hashOfConfig":"30"},{"size":2810,"mtime":1610410505156,"results":"50","hashOfConfig":"30"},{"size":10692,"mtime":1610408863308,"results":"51","hashOfConfig":"30"},{"size":4093,"mtime":1610396636097,"results":"52","hashOfConfig":"30"},{"size":7706,"mtime":1610286963709,"results":"53","hashOfConfig":"30"},{"size":3974,"mtime":1610409538409,"results":"54","hashOfConfig":"30"},{"size":7243,"mtime":1610409284073,"results":"55","hashOfConfig":"30"},{"size":3961,"mtime":1610410586258,"results":"56","hashOfConfig":"30"},{"size":7716,"mtime":1610410326537,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"105npln",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"60"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/swamy/Desktop/Hospitals/react-hospital/src/index.js",[],["134","135"],"/Users/swamy/Desktop/Hospitals/react-hospital/src/reportWebVitals.js",[],"/Users/swamy/Desktop/Hospitals/react-hospital/src/App.js",["136","137","138"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport {Tabs,Tab,TabList,TabPanel} from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport ListPatientsComponent from './components/ListPatientsComponent'\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreatePatientsComponent from './components/CreatePatientsComponent';\nimport UpdatePatientsComponent from './components/UpdatePatientsComponent';\nimport ListPatientsHealthComponent from './components/ListPatientsHealthComponent';\nimport CreatePatientsHealthComponent from './components/CreatePatientsHealthComponent';\nimport CreatePatientsDiseaseComponent from './components/CreatePatientsDiseaseComponent';\nimport ListPatientsDiseasesComponent from './components/ListPatientsDiseasesComponent';\nimport ListEmployeesComponent from './components/ListEmployeesComponent';\nimport CreateEmployeesComponent from './components/CreateEmployeesComponent';\nimport CreateBedsComponent from './components/CreateBedsComponent';\nimport ListEmployeesSpecializationComponent from './components/ListEmployeesSpecializationComponent';\nimport CreateEmployeesSpecializationComponent from './components/CreateEmployeesSpecializationComponent';\nimport ListRoomsComponent from './components/ListRoomsComponent';\nimport ListBedsComponent from './components/ListBedsComponent';\nimport ListRoomsAvailabilityComponent from './components/ListRoomsAvailabilityComponent';\nimport ListBedsAvailabilityComponent from './components/ListBedsAvailabilityComponent';\nimport CreateRoomsComponent from './components/CreateRoomsComponent';\nimport CreateRoomsAvailabilityComponent from './components/CreateRoomsAvailabilityComponent';\nimport CreateBedsAvailabilityComponent from './components/CreateBedsAvailabilityComponent';\n\nexport default function App() {\n  const [value,setValue] = React.useState(0)\n  const handleTabs=(e,val)=>{\n    console.warn(val)\n    setValue(val)\n  }\n\n  return (\n    <div>\n      <Router>\n            <HeaderComponent></HeaderComponent>\n              <div className=\"container\"> \n                <Tabs>\n                  <TabList>\n                    <Tab>\n                      Patients\n                    </Tab>\n\n                    <Tab>\n                      Admin\n                    </Tab>\n\n                    <Tab>\n                      Employees\n                    </Tab>\n                  </TabList>\n                  \n                  <TabPanel>  \n                  <Switch>\n                  <Route path=\"/\" exact component={ListPatientsComponent}></Route>                  \n                  <Route path=\"/patients\" exact component={ListPatientsComponent}></Route>\n                  <Route path=\"/add-patients\" exact component={CreatePatientsComponent}></Route>\n                  <Route path=\"/view-patients/:id\" exact component={UpdatePatientsComponent}></Route>\n                  <Route path=\"/view-patients-health/:id\" exact component={ListPatientsHealthComponent}></Route>\n                  <Route path=\"/view-patients-diseases/:id\" exact component={ListPatientsDiseasesComponent}></Route>\n                  <Route path=\"/add-patients-health/:id\" exact component={CreatePatientsHealthComponent}></Route>\n                  <Route path=\"/view-health/:id\" exact component={CreatePatientsHealthComponent}></Route>\n                  <Route path=\"/update-patients-health/:id\" exact component={CreatePatientsHealthComponent}></Route>\n                  <Route path=\"/view-diseases/:id\" exact component={CreatePatientsDiseaseComponent}></Route>\n                  <Route path=\"/add-patients-diseases/:id\" exact component={CreatePatientsDiseaseComponent}></Route>\n                  <Route path=\"/update-patients-diseases/:id\" exact component={CreatePatientsDiseaseComponent}></Route>\n                  <Route path=\"/update-patients/:id\" exact component={UpdatePatientsComponent}></Route>\n                  </Switch>\n                  </TabPanel>\n\n                  <TabPanel>  \n                  <Switch>\n                  <Route path=\"/\" exact component={ListRoomsComponent}></Route>             \n                  <Route path=\"/rooms\" exact component={ListRoomsComponent}></Route>\n                  <Route path=\"/add-rooms\" exact component={CreateRoomsComponent}></Route>\n                  <Route path=\"/add-beds\" exact component={CreateBedsComponent}></Route>\n                  <Route path=\"/view-rooms/:id\" exact component={CreateRoomsComponent}></Route>\n                  <Route path=\"/view-beds/:id\" exact component={ListBedsComponent}></Route>\n                  <Route path=\"/view-rooms-availability/:id\" exact component={ListRoomsAvailabilityComponent}></Route>\n                  <Route path=\"/view-beds-availability/:id\" exact component={ListBedsAvailabilityComponent}></Route>\n                  <Route path=\"/add-rooms-availability/:id\" exact component={CreateRoomsAvailabilityComponent}></Route>\n                  <Route path=\"/add-beds-availability/:id\" exact component={CreateBedsAvailabilityComponent}></Route>\n                  <Route path=\"/view-availability/:id\" exact component={CreateRoomsAvailabilityComponent}></Route>\n                  <Route path=\"/update-availability/:id\" exact component={CreateRoomsAvailabilityComponent}></Route>\n                  <Route path=\"/update-beds-availability/:id\" exact component={CreateBedsAvailabilityComponent}></Route>\n                  <Route path=\"/update-rooms/:id\" exact component={CreateRoomsComponent}></Route>\n                  <Route path=\"/update-bed/:id\" exact component={CreateBedsComponent}></Route>\n                  <Route path=\"/view-bed/:id\" exact component={CreateBedsComponent}></Route>\n                  </Switch>\n                  </TabPanel>\n                  \n                  <TabPanel>  \n                  <Switch>\n                  <Route path=\"/\" exact component={ListEmployeesComponent}></Route>             \n                  <Route path=\"/employees\" exact component={ListEmployeesComponent}></Route>\n                  <Route path=\"/view-employees/:id\" exact component={CreateEmployeesComponent}></Route>\n                  <Route path=\"/view-employees-specialization/:id\" exact component={ListEmployeesSpecializationComponent}></Route>\n                  <Route path=\"/view-specialization/:id\" exact component={CreateEmployeesSpecializationComponent}></Route>\n                  <Route path=\"/add-employees\" exact component={CreateEmployeesComponent}></Route>\n                  <Route path=\"/add-employees-specialization/:id\" exact component={CreateEmployeesSpecializationComponent}></Route>\n                  <Route path=\"/update-employees-specialization/:id\" exact component={CreateEmployeesSpecializationComponent}></Route>\n                  <Route path=\"/update-employees/:id\" exact component={CreateEmployeesComponent}></Route>\n                  </Switch>\n                  </TabPanel>\n\n                </Tabs>\n              </div>\n            <FooterComponent></FooterComponent>\n      </Router>\n    </div>\n  );\n  \n}\n\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListPatientsComponent.jsx",["139"],"import React, { Component } from 'react'\nimport PatientsService from '../services/PatientsService'\n\nexport default class ListPatientsComponent extends Component {\n\n    constructor(props){\n        const patients = [];\n        super(props)\n            this.state = {\n                patients: []\n            }\n            \n        this.addPatients = this.addPatients.bind(this);\n        this.editPatients = this.editPatients.bind(this);\n        this.deletePatients = this.deletePatients.bind(this);\n    }\n\n    handleSubmitClicked() {\n        this.setState({\n          isDisabled: true\n        });\n      }\n\n    addPatients(){\n        this.props.history.push('/add-patients');\n    }\n\n    editPatients(id){\n        this.props.history.push(`/update-patients/${id}`);\n    }\n\n    viewPatients(id){\n        this.props.history.push(`/view-patients/${id}`);\n    }\n\n    deletePatients(id){\n        PatientsService.deletePatients(id).then( res=> {\n            this.setState({patients: this.state.patients.filter(patient => patient.patientId !== id)});\n        });\n    }\n\n    componentDidMount(){ \n        PatientsService.getPatients().then((res) => {\n            console.log(res.data);            \n            this.setState({ patients: res.data });\n        });\n    }\n\n    handleEmpty(patients,iden) {\n        patients.filter((entry) => entry.firstName === iden );\n        console.log(\"Inside....\")\n        this.state.setState(patients);\n    }\n\n    render() {\n                \n        return (\n                    <div>\n                        <h2 className=\"text-center\">Patients List</h2>\n                        <div className=\"row\">\n                            <button className=\"btn btn-primary\" onClick={this.addPatients}> Add Patients</button>\n                        </div>\n                        <div className=\"row\">\n                            <table className=\"table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Age</th>\n                                        <th>Contact</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.patients.filter(patients => patients.firstName != null ).map(\n                                            patients =>\n                                            <tr key = {patients.patientId}>\n                                                <td> {patients.firstName+\" \"+patients.lastName} </td>\n                                                <td> {patients.dateOfBirth} </td>\n                                                <td> {patients.contactNumber} </td>\n                                                <td>\n                                                    <button onClick={ () => this.viewPatients(patients.patientId) } className=\"btn btn-info\">View</button>\n                                                    <button style={{marginLeft: \"10px\"}} onClick={ () => this.editPatients(patients.patientId) } className=\"btn btn-info\">Update</button>\n                                                    <button style={{marginLeft: \"10px\"}} onClick={ () => this.deletePatients(patients.patientId) } className=\"btn btn-danger\">Delete</button>\n                                                </td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>    \n                        </div>\n                    </div>\n                );\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/services/PatientsService.js",[],"/Users/swamy/Desktop/Hospitals/react-hospital/src/components/FooterComponent.jsx",[],"/Users/swamy/Desktop/Hospitals/react-hospital/src/components/HeaderComponent.jsx",["140"],"import React, { Component } from 'react'\n\nexport default class HeaderComponent extends Component {\n    render() {\n        return (\n            <div>\n                <header>\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">   \n                    <div><a href=\"\" className=\"header\">Hospital Management System</a></div>\n                    </nav>\n                </header>\n            </div>\n        )\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreatePatientsComponent.jsx",[],"/Users/swamy/Desktop/Hospitals/react-hospital/src/components/UpdatePatientsComponent.jsx",["141","142"],"import React, { Component } from 'react';\nimport PatientsService from '../services/PatientsService';\n\nexport default class UpdatePatientsComponent extends Component {\n\n    constructor(props){\n        const patientsHealth = [];\n        super(props)\n        this.state = {\n            patientId: this.props.match.params.id,\n            firstName: '',\n            lastName: '',\n            dateOfBirth: '',\n            gender: '',\n            weight: '',\n            height: '',\n            contactNumber: '',\n            emailId: '',\n            profession: '',\n            address: '',\n            city: '',\n            state: '',\n            zipCode: '',\n            isDisabled: false,\n            isHidden: false,\n            title:'',\n            patientsHealth: []\n        }\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\n        this.changeDateofBirthHandler = this.changeDateofBirthHandler.bind(this);\n        this.changeGenderHandler = this.changeGenderHandler.bind(this);\n        this.changeWeightHandler = this.changeWeightHandler.bind(this);\n        this.changeHeightHandler = this.changeHeightHandler.bind(this);\n        this.changeContactNumberHandler = this.changeContactNumberHandler.bind(this);\n        this.changeEmailIdHandler = this.changeEmailIdHandler.bind(this);\n        this.changeProfessionHandler = this.changeProfessionHandler.bind(this);\n        this.changeAddressHandler = this.changeAddressHandler.bind(this);\n        this.changeCityHandler = this.changeCityHandler.bind(this);\n        this.changeStateHandler = this.changeStateHandler.bind(this);\n        this.changeZipCodeHandler = this.changeZipCodeHandler.bind(this);\n        this.updatePatients = this.updatePatients.bind(this);\n        this.viewPatientsHealth = this.viewPatientsHealth.bind(this);\n    }\n\n    componentDidMount(){\n        var currentLocation = window.location.pathname;\n        console.log(\"lalalalallaaa.....\");\n        PatientsService.getPatientsById(this.state.patientId).then( (res) => {\n            let patients = res.data;\n            this.setState({firstName: patients.firstName,\n                lastName: patients.lastName,\n                dateOfBirth: patients.dateOfBirth,\n                gender: patients.gender,\n                weight: patients.weight,\n                height: patients.height,\n                contactNumber: patients.contactNumber,\n                emailId: patients.emailId,\n                profession: patients.profession,\n                address: patients.address,\n                city: patients.city,\n                state: patients.state,\n                zipCode: patients.zipCode,\n                title: 'Update Patients'\n            });\n            if (currentLocation.substring(1,14) == 'view-patients')\n            {\n                this.setState({\n                    patientId: this.props.match.params.id,\n                    isDisabled: true,\n                    isHidden: true,\n                    title:'View Patients'\n                })\n            }\n        }); \n        console.log(\"Patients ID in Update Patients Component:\" +this.props.match.params.id);\n    }\n\n    updatePatients = (e) => {\n        e.preventDefault();\n        let patient = {firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        dateOfBirth: this.state.dateOfBirth,\n        gender: this.state.gender,\n        weight: this.state.weight,\n        height: this.state.height,\n        contactNumber: this.state.contactNumber,\n        emailId: this.state.emailId,\n        profession: this.state.profession,\n        address: this.state.address,\n        city: this.state.city,\n        state: this.state.state,\n        zipCode: this.state.zipCode};\n        console.log(\"Patients is : \" +JSON.stringify(patient));\n        PatientsService.updatePatients(patient, this.state.patientId).then( res=> {\n            this.props.history.push('/patients');\n        });\n    }\n\n    cancel(){\n        this.props.history.push('/patients');\n    }\n\n    viewPatientsHealth(id){\n        console.log(\"Id inside view patients health : \"+id);\n        this.props.history.push(`/view-patients-health/${id}`);\n    }\n\n    viewPatientsDiseases(id){\n        this.props.history.push(`/view-patients-diseases/${id}`);\n    }\n\n    changeFirstNameHandler=(event) => {\n        this.setState({firstName: event.target.value});\n    }\n    changeLastNameHandler=(event) => {\n        this.setState({lastName: event.target.value});\n    }\n    changeDateofBirthHandler=(event) => {\n        this.setState({dateOfBirth: event.target.value});\n    }    \n    changeGenderHandler=(event) => {\n        this.setState({gender: event.target.value});\n    }\n    changeWeightHandler=(event) => {\n        this.setState({weight: event.target.value});\n    }\n    changeHeightHandler=(event) => {\n        this.setState({height: event.target.value});\n    }\n    changeContactNumberHandler=(event) => {\n        this.setState({contactNumber: event.target.value});\n    }\n    changeEmailIdHandler=(event) => {\n        this.setState({emailId: event.target.value});\n    }\n    changeAddressHandler=(event) => {\n        this.setState({address: event.target.value});\n    }\n    changeProfessionHandler=(event) => {\n        this.setState({profession: event.target.value});\n    }\n    changeCityHandler=(event) => {\n        this.setState({city: event.target.value});\n    }\n    changeStateHandler=(event) => {\n        this.setState({state: event.target.value});\n    }\n    changeZipCodeHandler=(event) => {\n        this.setState({zipCode: event.target.value});\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <form>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-1\">\n                            <button class=\"btn btn-success\" onClick={ () => this.viewPatientsHealth(this.state.patientId) }\n                            style={{height : '40px', width : '80px', marginLeft : '5px'}}> Health </button>\n                            </div>\n                            <div class=\"form-group col-md-3\">\n                            <button class=\"btn btn-success\" onClick={ () => this.viewPatientsDiseases(this.state.patientId) }\n                            style={{height : '40px', width : '90px', marginLeft : '5px'}}> Diseases </button>\n                            </div>\n                            <div class=\"form-group col-md-4\">\n                            <h1 style={{textAlign: 'right'}}> {this.state.title} </h1>\n                            </div>\n                        </div>\n                    \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-6\">\n                            <label>First Name</label>\n                            <input placeholder=\"First Name\" className=\"form-control\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.firstName} onChange={this.changeFirstNameHandler}/>                            \n                            </div>\n                            <div class=\"form-group col-md-6\">\n                            <label>Last Name</label>\n                            <input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\" id=\"lastName\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.lastName} onChange={this.changeLastNameHandler}/>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-3\">\n                            <label>Date of Birth</label>\n                            <input type=\"date\" placeholder=\"Date of Birth\" name=\"dateOfBirth\" className=\"form-control\" id=\"dateOfBirth\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.dateOfBirth} onChange={this.changeDateofBirthHandler}/>                        \n                            </div>\n                            <div class=\"form-group col-md-3\">\n                            <label>Gender</label>\n                            <select placeholder=\"Gender\" name=\"gender\" className=\"form-control\" id=\"gender\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.gender} onChange={this.changeGenderHandler}>\n                            <option value=\"M\">Male</option>\n                            <option value=\"F\">Female</option>\n                            <option value=\"O\">Other</option>\n                            </select>\n                            </div>\n                            <div class=\"form-group col-md-3\">\n                            <label>Weight</label>\n                            <input type=\"number\" placeholder=\"Weight\" name=\"weight\" className=\"form-control\" id=\"weight\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.weight} onChange={this.changeWeightHandler}/>                            \n                            </div>\n                            <div class=\"form-group col-md-3\">\n                            <label>Height</label>\n                            <input type=\"number\" placeholder=\"Height\" name=\"height\" className=\"form-control\" id=\"height\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.height} onChange={this.changeHeightHandler}/>                        \n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-4\">\n                            <label>Contact Number</label>\n                            <input type=\"tel\" placeholder=\"Contact Number\" name=\"contactNumber\" className=\"form-control\" id=\"contactNumber\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\" value={this.state.contactNumber} onChange={this.changeContactNumberHandler}/>\n                            </div>\n                            <div className=\"form-group col-md-8\">\n                            <label>E-mail</label>\n                            <input type=\"email\" placeholder=\"E-mail\" name=\"emailId\" className=\"form-control\" id=\"emailId\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.emailId} onChange={this.changeEmailIdHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-4\">\n                            <label>Profession</label>\n                            <input placeholder=\"Profession\" name=\"profession\" className=\"form-control\" id=\"profession\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.profession} onChange={this.changeProfessionHandler}/>                            \n                            </div>\n                            <div class=\"form-group col-md-8\">\n                            <label>Address</label>\n                            <input placeholder=\"Address\" name=\"address\" className=\"form-control\" id=\"address\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.address} onChange={this.changeAddressHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-4\">\n                            <label>City</label>\n                            <input placeholder=\"City\" name=\"city\" className=\"form-control\" id=\"city\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.city} onChange={this.changeCityHandler}/>                            \n                            </div>\n                            <div class=\"form-group col-md-4\">\n                            <label>State</label>\n                            <input placeholder=\"State\" name=\"state\" className=\"form-control\" id=\"state\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.state} onChange={this.changeStateHandler}/>\n                            </div>\n                            <div class=\"form-group col-md-4\">\n                            <label>Zip Code</label>\n                            <input placeholder=\"Zip Code\" name=\"zipCode\" className=\"form-control\" id=\"zipCode\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.zipCode} onChange={this.changeZipCodeHandler}/>                            \n                            </div>\n                        </div> \n                        <div className=\"form-row\">\n                        <div className=\"form-group col-md-2\">\n                        <button className=\"btn btn-success\" onClick={this.updatePatients} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '350px'}}>Save</button>\n                        </div>\n                        <div className=\"form-group col-md-2\">\n                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '300px'}}>Cancel</button>\n                        </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/TabNav.js",["143"],"import React from 'react';\n\nclass TabNav extends React.Component {\n\n    render() {\n        return(\n            <div style={{ width: '30%' }}>\n                <ul className=\"nav nav-tabs\">\n                    {\n                        this.props.tabs.map(tab => {\n                            const active = (tab === this.props.selected ? 'active ' : '' );\n\n                            return(\n                                <li className=\"nav-item\" key={ tab }>\n                                <a className={ \"nav-link \" + active } onClick={ () => this.props.setSelected(tab) } >\n                                    { tab }\n                                </a>\n                                </li>\n                            );\n                        })\n                    }\n                </ul>\n                { this.props.children }\n            </div>\n        );\n    }\n}\n\nexport default TabNav;",["144","145"],"/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListPatientsHealthComponent.jsx",["146","147","148","149"],"import React, { Component } from 'react'\nimport PatientsService from '../services/PatientsService';\n\nexport default class ListPatientsHealth extends Component {\n    constructor(props){\n        const patientsHealth = [];\n        super(props)\n            this.state = {\n                patientId: this.props.match.params.id,\n                selectedRowIndex: [],\n                patientsHealth: []\n            }\n            \n        this.addPatientsHealth = this.addPatientsHealth.bind(this);\n        this.editPatientsHealth = this.editPatientsHealth.bind(this);\n        this.deletePatientsHealth = this.deletePatientsHealth.bind(this);\n    }\n\n    handleSubmitClicked() {\n        this.setState({\n          isDisabled: true\n        });\n      }\n\n    viewPatientsHealth(id,symptoms,date,time,additionalInfo){\n        this.props.history.push(`/view-health/${id}`, {patientId: id, symptoms: symptoms, \n            date: date, time: time, additionalInfo: additionalInfo, title: \"View Patients Health\"});\n    }   \n\n    addPatientsHealth(){\n        this.props.history.push(`/add-patients-health/${this.state.patientId}`);\n    }\n\n    editPatientsHealth(id,symptoms,date,time,additionalInfo){\n        this.props.history.push(`/update-patients-health/${id}`, { patientId: id, symptoms: symptoms, \n            date: date, time: time, additionalInfo: additionalInfo, title: \"Update Patients Health\"});\n    }\n\n    deletePatientsHealth(id,symptoms,date){\n        console.log(\"Symptom is:\" +id+symptoms+date);\n        PatientsService.deletePatientsHealth(id,symptoms,date).then( res=> {\n            this.setState({patientsHealth: this.state.patientsHealth.filter(patientHealth => (patientHealth.patientId != id && patientHealth.symptoms != symptoms && patientHealth.date != date))});\n        });\n    }\n\n    componentDidMount(){ \n        console.log(\"Patient Id in Health:\"+this.state.patientId );\n        PatientsService.getPatientsHealthById(this.state.patientId).then((res) => {\n            console.log(res.data);            \n            this.setState({ patientsHealth: res.data });\n        });\n    }\n\n    handleEmpty(patientsHealth,iden) {\n        patientsHealth.filter((entry) => entry.patientId === iden );\n        console.log(\"Inside....\")\n        this.state.setState(patientsHealth);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\">Patients Health</h2>\n                <div className=\"row\">\n                    <button className=\"btn btn-primary\" onClick={this.addPatientsHealth}> Add Health</button>\n                </div>\n                <div className=\"row\">\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th>Symptoms</th>\n                                <th>Date</th>\n                                <th>Time</th>\n                                <th>Additional Information</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.patientsHealth.map(\n                                    patientsHealth =>\n                                    <tr key = {patientsHealth.patientId}>\n                                        <td> {patientsHealth.symptoms} </td>\n                                        <td> {patientsHealth.date} </td>\n                                        <td> {patientsHealth.time} </td>\n                                        <td> {patientsHealth.additionalInfo} </td>\n                                        <td>\n                                            <button onClick={ () => this.viewPatientsHealth(patientsHealth.patientId,patientsHealth.symptoms,patientsHealth.date,patientsHealth.time,patientsHealth.additionalInfo) } className=\"btn btn-info\">View</button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.editPatientsHealth(patientsHealth.patientId,patientsHealth.symptoms,patientsHealth.date,patientsHealth.time,patientsHealth.additionalInfo) } className=\"btn btn-info\" >Update</button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.deletePatientsHealth(patientsHealth.patientId,patientsHealth.symptoms,patientsHealth.date) } className=\"btn btn-danger\">Delete</button>\n                                        </td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>    \n                </div>\n            </div>\n        );\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreatePatientsHealthComponent.jsx",["150","151","152"],"import React, { Component } from 'react'\nimport PatientsService from '../services/PatientsService';\n\nexport default class CreatePatientsHealthComponent extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            patientId: this.props.match.params.id,\n            date: '',\n            time: '',\n            symptoms: '',\n            additionalInfo: '',\n            isDisabled: false,\n            isHidden: false,\n            title: 'Add Patients Health'\n        }\n\n        this.changeDateHandler = this.changeDateHandler.bind(this);\n        this.changeTimeHandler = this.changeTimeHandler.bind(this);\n        this.changeSymptomsHandler = this.changeSymptomsHandler.bind(this);\n        this.changeAdditionalInfoHandler = this.changeAdditionalInfoHandler.bind(this);\n        this.savePatientsHealth = this.savePatientsHealth.bind(this);\n    }\n\n    savePatientsHealth = (e) => {\n        e.preventDefault();\n        let patientsHealth = {\n        patientId: this.props.match.params.id,\n        date: this.state.date,\n        time: this.state.time,\n        symptoms: this.state.symptoms,\n        additionalInfo: this.state.additionalInfo};\n        console.log(\"Saving Patients....\");\n        var currentLocation = window.location.pathname;\n        if (currentLocation.substring(1,20) == 'add-patients-health')\n        {\n            console.log(\"PATIENT ID IS:\"+this.state.patientId);\n            console.log(\"Patients is : \" +JSON.stringify(patientsHealth));\n            PatientsService.createPatientsHealth(patientsHealth).then(res =>{\n                this.props.history.push(`/view-patients-health/${this.state.patientId}`);\n            });\n        }\n        else\n        {\n            console.log(\"Saving the Health\", this.state);\n            PatientsService.updatePatientsHealth(patientsHealth, this.state.patientId).then(res =>{\n                this.props.history.push(`/view-patients-health/${this.state.patientId}`);\n            });\n        }\n    }\n\n    cancel(){\n        this.props.history.push(`/view-patients-health/${this.state.patientId}`);\n    }\n\n    changeDateHandler=(event) => {\n        this.setState({date: event.target.value});\n    }\n    changeTimeHandler=(event) => {\n        this.setState({time: event.target.value});\n    }\n    changeSymptomsHandler=(event) => {\n        this.setState({symptoms: event.target.value});\n    }    \n    changeAdditionalInfoHandler=(event) => {\n        this.setState({additionalInfo: event.target.value});\n    }\n    componentDidMount(){ \n        console.log(\"Patient Id in Health:\"+this.state.patientId );\n        var currentLocation = window.location.pathname;\n        if (currentLocation.substring(1,20) == 'add-patients-health')\n        {\n            console.log(\"Its inside Create\");\n            return;\n        } else if(currentLocation.substring(1,12) == 'view-health')\n        {\n            console.log(\"Its inside View..\");\n            this.setState(this.props.location.state);\n            this.setState({\n                patientId: this.props.match.params.id,\n                isDisabled: true,\n                isHidden: true,\n                title:'View Patients Health'\n            })\n        }\n        else\n        {\n            this.setState(this.props.location.state);\n            console.log(\"Its inside Update\"+this.state.symptoms);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <form>\n                    <h1 style={{textAlign: 'center'}}> {this.state.title} </h1>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-6\">\n                            <label>Date</label>\n                            <input type=\"date\" placeholder=\"Date\" className=\"form-control\" id=\"date\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.date} onChange={this.changeDateHandler}/>\n                            </div>\n                            <div class=\"form-group col-md-6\">\n                            <label>Time</label>\n                            <input type=\"time\"  placeholder=\"Time\" name=\"time\" className=\"form-control\" id=\"time\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.time} onChange={this.changeTimeHandler}/>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-12\">\n                            <label>Symptoms</label>\n                            <input type=\"text\" placeholder=\"Symptoms\" name=\"symptoms\" className=\"form-control\" id=\"symptoms\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.symptoms} onChange={this.changeSymptomsHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-12\">\n                            <label>Additional Information</label>\n                            <input type=\"text\" placeholder=\"Additional Information\" name=\"additionalInfo\" className=\"form-control\" id=\"additionalInfo\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.additionalInfo} onChange={this.changeAdditionalInfoHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-success\" onClick={this.savePatientsHealth} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '350px'}}>Save</button>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '300px'}}>Cancel</button>\n                        </div>\n                        </div>\n                    </form>\n                </div>                \n            </div>\n        )\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListPatientsDiseasesComponent.jsx",["153","154"],"import React, { Component } from 'react'\nimport PatientsService from '../services/PatientsService';\n\nexport default class ListPatientsDiseasesComponent extends Component {\n    constructor(props){\n        const patientsDiseases = [];\n        super(props)\n            this.state = {\n                patientId: this.props.match.params.id,\n                patientsDiseases: []\n            }\n            \n        this.addPatientsDiseases = this.addPatientsDiseases.bind(this);\n        this.editPatientsDiseases = this.editPatientsDiseases.bind(this);\n        this.deletePatientsDiseases = this.deletePatientsDiseases.bind(this);\n    }\n\n    handleSubmitClicked() {\n        this.setState({\n          isDisabled: true\n        });\n      }\n\n    viewPatientsDisease(id,disease,additionalInfo){\n        this.props.history.push(`/view-diseases/${id}`, {patientId: id, disease: disease, \n            additionalInfo: additionalInfo, title: \"View Patients Diseases\"});\n    }   \n\n    addPatientsDiseases(){\n        this.props.history.push(`/add-patients-diseases/${this.state.patientId}`);\n    }\n\n    editPatientsDiseases(id,disease,additionalInfo){\n        this.props.history.push(`/update-patients-diseases/${id}`, { patientId: id, disease: disease, \n            additionalInfo: additionalInfo, title: \"Update Patients Diseases\"});\n    }\n\n    deletePatientsDiseases(id,disease){\n        PatientsService.deletePatientsDiseases(id,disease).then( res=> {\n            this.setState({patientsDiseases: this.state.patientsDiseases.filter(patientsDiseases => patientsDiseases.disease != disease)});\n        });\n    }\n\n    componentDidMount(){ \n        PatientsService.getPatientsDiseasesById(this.state.patientId).then((res) => {          \n            this.setState({ patientsDiseases: res.data });\n        });\n    }\n\n    // handleEmpty(patientsHealth,iden) {\n    //     patientsHealth.filter((entry) => entry.patientId === iden );\n    //     console.log(\"Inside....\")\n    //     this.state.setState(patientsHealth);\n    // }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\">Patients Diseases</h2>\n                <div className=\"row\">\n                    <button className=\"btn btn-primary\" onClick={this.addPatientsDiseases}> Add Disease</button>\n                </div>\n                <div className=\"row\">\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th>Disease</th>\n                                <th>Additional Information</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.patientsDiseases.map(\n                                    patientsDiseases =>\n                                    <tr key = {patientsDiseases.patientId}>\n                                        <td> {patientsDiseases.disease} </td>\n                                        <td> {patientsDiseases.additionalInfo} </td>\n                                        <td>\n                                        <button onClick={ () => this.viewPatientsDisease(patientsDiseases.patientId,patientsDiseases.disease,patientsDiseases.additionalInfo) } className=\"btn btn-info\">View</button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.editPatientsDiseases(patientsDiseases.patientId,patientsDiseases.disease,patientsDiseases.additionalInfo) } className=\"btn btn-info\" >Update</button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.deletePatientsDiseases(patientsDiseases.patientId,patientsDiseases.disease) } className=\"btn btn-danger\">Delete</button>\n                                        </td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>    \n                </div>\n            </div>\n        );\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreatePatientsDiseaseComponent.jsx",["155","156","157"],"import React, { Component } from 'react'\nimport PatientsService from '../services/PatientsService';\n\nexport default class CreatePatientsDiseaseComponent extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            patientId: this.props.match.params.id,\n            disease: '',\n            additionalInfo: '',\n            isDisabled: false,\n            isHidden: false,\n            title: 'Add Patients Disease'\n        }\n        this.changeDiseaseHandler = this.changeDiseaseHandler.bind(this);\n        this.changeAdditionalInfoHandler = this.changeAdditionalInfoHandler.bind(this);\n        this.savePatientsDisease = this.savePatientsDisease.bind(this);\n    }\n\n    savePatientsDisease = (e) => {\n        e.preventDefault();\n        let patientsDisease = {\n        patientId: this.props.match.params.id,\n        disease: this.state.disease,\n        additionalInfo: this.state.additionalInfo};\n        var currentLocation = window.location.pathname;\n        if (currentLocation.substring(1,22) == 'add-patients-diseases')\n        {\n            console.log(\"PATIENT ID IS:\"+this.state.patientId);\n            console.log(\"Patients is : \" +JSON.stringify(patientsDisease));\n            PatientsService.createPatientsDisease(patientsDisease).then(res =>{\n                this.props.history.push(`/view-patients-diseases/${this.state.patientId}`);\n            });\n        }\n        else\n        {\n            console.log(\"Saving the Disease\", this.state);\n            PatientsService.updatePatientsDisease(patientsDisease, this.state.patientId).then(res =>{\n                this.props.history.push(`/view-patients-diseases/${this.state.patientId}`);\n            });\n        }\n    }\n\n    cancel(){\n        this.props.history.push(`/view-patients-diseases/${this.state.patientId}`);\n    }\n\n    changeDiseaseHandler=(event) => {\n        this.setState({disease: event.target.value});\n    }    \n    changeAdditionalInfoHandler=(event) => {\n        this.setState({additionalInfo: event.target.value});\n    }\n\n    componentDidMount(){ \n        var currentLocation = window.location.pathname;\n        if (currentLocation.substring(1,22) == 'add-patients-diseases')\n        {\n            console.log(\"Its inside Create\");\n            return;\n        } else if(currentLocation.substring(1,14) == 'view-diseases')\n        {\n            console.log(\"Its inside View..\");\n            this.setState(this.props.location.state);\n            this.setState({\n                patientId: this.props.match.params.id,\n                isDisabled: true,\n                isHidden: true,\n                title:'View Patients Diseases'\n            })\n        }\n        else\n        {\n            this.setState(this.props.location.state);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <form>\n                    <h1 style={{textAlign: 'center'}}> {this.state.title} </h1>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-12\">\n                            <label>Disease</label>\n                            <input type=\"text\" placeholder=\"Disease\" name=\"disease\" className=\"form-control\" id=\"disease\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.disease} onChange={this.changeDiseaseHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-12\">\n                            <label>Additional Information</label>\n                            <input type=\"text\" placeholder=\"Additional Information\" name=\"additionalInfo\" className=\"form-control\" id=\"additionalInfo\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.additionalInfo} onChange={this.changeAdditionalInfoHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-success\" onClick={this.savePatientsDisease} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '350px'}}>Save</button>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '300px'}}>Cancel</button>\n                        </div>\n                        </div>\n                    </form>\n                </div>                \n            </div>\n        )\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListEmployeesComponent.jsx",["158"],"import React, { Component } from 'react'\nimport EmployeesService from '../services/EmployeesService'\n\nexport default class ListEmployeesComponent extends Component {\n    constructor(props){\n        const employees = [];\n        super(props)\n            this.state = {\n                employees: []\n            }\n            \n        this.addEmployees = this.addEmployees.bind(this);\n        this.editEmployees = this.editEmployees.bind(this);\n        this.deleteEmployees = this.deleteEmployees.bind(this);\n    }\n\n    handleSubmitClicked() {\n        this.setState({\n          isDisabled: true\n        });\n      }\n\n    addEmployees(){\n        this.props.history.push('/add-employees');\n    }\n\n    editEmployees(id,firstName,lastName,type,designation,dateOfBirth,gender,contactNumber,emailId,address,\n        city,state,zipCode,salary){\n        this.props.history.push(`/update-employees/${id}`,{ employeeId:id, firstName:firstName, lastName:lastName,\n        type:type,designation:designation,dateOfBirth:dateOfBirth,gender:gender,contactNumber:contactNumber,\n        emailId:emailId, address:address,city:city,state:state,zipCode:zipCode,salary:salary, title:\"Update Employees\"});\n    }\n\n    viewEmployees(id,firstName,lastName,type,designation,dateOfBirth,gender,contactNumber,emailId,address,\n        city,state,zipCode,salary){\n        this.props.history.push(`/view-employees/${id}`, { employeeId:id, firstName:firstName, lastName:lastName,\n            type:type,designation:designation,dateOfBirth:dateOfBirth,gender:gender,contactNumber:contactNumber,\n            emailId:emailId, address:address,city:city,state:state,zipCode:zipCode,salary:salary, title:\"View Employees\"});\n    }\n\n    deleteEmployees(id){\n        EmployeesService.deleteEmployees(id).then( res=> {\n            this.setState({employees: this.state.employees.filter(employees => employees.employeeId !== id)});\n        });\n    }\n\n    componentDidMount(){ \n        console.log(\"Inside here...\");\n        EmployeesService.getEmployees().then((res) => {\n            console.log(res.data);            \n            this.setState({ employees: res.data });\n        });\n    }\n\n    handleEmpty(employees,iden) {\n        employees.filter((entry) => entry.firstName === iden );\n        console.log(\"Inside....\")\n        this.state.setState(employees);\n    }\n\n    render() {\n                \n        return (\n                    <div>\n                        <h2 className=\"text-center\">Employees List</h2>\n                        <div className=\"row\">\n                            <button className=\"btn btn-primary\" onClick={this.addEmployees}> Add Employees</button>\n                        </div>\n                        <div className=\"row\">\n                            <table className=\"table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Type</th>\n                                        <th>Designation</th>\n                                        <th>Contact</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.employees.filter(employees => employees.firstName != null ).map(\n                                            employees =>\n                                            <tr key = {employees.employeeId}>\n                                                <td> {employees.firstName+\" \"+employees.lastName} </td>\n                                                <td> {employees.type} </td>\n                                                <td> {employees.designation} </td>\n                                                <td> {employees.contactNumber} </td>\n                                                <td>\n                                                    <button onClick={ () => this.viewEmployees(employees.employeeId,employees.firstName,employees.lastName,\n                                                        employees.type,employees.designation,employees.dateOfBirth,employees.gender,employees.contactNumber,\n                                                        employees.emailId,employees.address,employees.city,employees.state,employees.zipCode,employees.salary) } \n                                                    className=\"btn btn-info\">View</button>\n                                                    <button style={{marginLeft: \"10px\"}} \n                                                    onClick={ () => this.editEmployees(employees.employeeId,employees.firstName,employees.lastName,\n                                                        employees.type,employees.designation,employees.dateOfBirth,employees.gender,employees.contactNumber,\n                                                        employees.emailId,employees.address,employees.city,employees.state,employees.zipCode,employees.salary) } \n                                                    className=\"btn btn-info\">Update</button>\n                                                    <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteEmployees(employees.employeeId) } className=\"btn btn-danger\">Delete</button>\n                                                </td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>    \n                        </div>\n                    </div>\n                );\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/services/EmployeesService.js",[],"/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateEmployeesComponent.jsx",["159","160","161"],"import React, { Component } from 'react'\nimport EmployeesService from '../services/EmployeesService';\n\nexport default class CreateEmployeesComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            firstName: '',\n            lastName: '',\n            type: '',\n            designation: '',\n            dateOfBirth: '',\n            gender: '',\n            contactNumber: '',\n            emailId: '',\n            address: '',\n            city: '',\n            state: '',\n            zipCode: '',\n            salary: '',\n            isDisabled: false,\n            isHidden: false,\n            title: 'Add Employees'\n        }\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\n        this.changeTypeHandler = this.changeTypeHandler.bind(this);\n        this.changeDesignationHandler = this.changeDesignationHandler.bind(this);\n        this.changeDateofBirthHandler = this.changeDateofBirthHandler.bind(this);\n        this.changeGenderHandler = this.changeGenderHandler.bind(this);\n        this.changeContactNumberHandler = this.changeContactNumberHandler.bind(this);\n        this.changeEmailIdHandler = this.changeEmailIdHandler.bind(this);\n        this.changeAddressHandler = this.changeAddressHandler.bind(this);\n        this.changeCityHandler = this.changeCityHandler.bind(this);\n        this.changeStateHandler = this.changeStateHandler.bind(this);\n        this.changeZipCodeHandler = this.changeZipCodeHandler.bind(this);\n        this.changeSalaryHandler = this.changeSalaryHandler.bind(this);\n        this.saveEmployees = this.saveEmployees.bind(this);\n    }\n\n    saveEmployees = (e) => {\n        e.preventDefault();\n        let employee = {firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        dateOfBirth: this.state.dateOfBirth,\n        gender: this.state.gender,\n        type: this.state.type,\n        designation: this.state.designation,\n        contactNumber: this.state.contactNumber,\n        emailId: this.state.emailId,\n        profession: this.state.profession,\n        address: this.state.address,\n        city: this.state.city,\n        state: this.state.state,\n        zipCode: this.state.zipCode,\n        salary: this.state.salary};\n        console.log(\"Employee is : \" +JSON.stringify(employee));\n        var currentLocation = window.location.pathname;\n        if (currentLocation.substring(1,14) == 'add-employees')\n        {\n            EmployeesService.createEmployees(employee).then(res =>{\n                this.props.history.push('/employees');\n            });\n        }\n        else\n        {\n            EmployeesService.updateEmployees(employee,this.state.employeeId).then(res =>{\n                // this.props.history.push(`/view-employees/${this.state.employeeId}`);\n                this.props.history.push('/employees');\n            });\n        }\n    \n    }\n\n    viewEmployeesSpecialization(id){\n        this.props.history.push(`/view-employees-specialization/${id}`);\n    }\n\n    cancel(){\n        this.props.history.push('/employees');\n    }\n\n    changeFirstNameHandler=(event) => {\n        this.setState({firstName: event.target.value});\n    }\n    changeLastNameHandler=(event) => {\n        this.setState({lastName: event.target.value});\n    }\n    changeDateofBirthHandler=(event) => {\n        this.setState({dateOfBirth: event.target.value});\n    }    \n    changeGenderHandler=(event) => {\n        this.setState({gender: event.target.value});\n    }\n    changeTypeHandler=(event) => {\n        this.setState({type: event.target.value});\n    }\n    changeDesignationHandler=(event) => {\n        this.setState({designation: event.target.value});\n    }\n    changeContactNumberHandler=(event) => {\n        this.setState({contactNumber: event.target.value});\n    }\n    changeEmailIdHandler=(event) => {\n        this.setState({emailId: event.target.value});\n    }\n    changeAddressHandler=(event) => {\n        this.setState({address: event.target.value});\n    }\n    changeProfessionHandler=(event) => {\n        this.setState({profession: event.target.value});\n    }\n    changeCityHandler=(event) => {\n        this.setState({city: event.target.value});\n    }\n    changeStateHandler=(event) => {\n        this.setState({state: event.target.value});\n    }\n    changeZipCodeHandler=(event) => {\n        this.setState({zipCode: event.target.value});\n    }\n    changeSalaryHandler=(event) => {\n        this.setState({salary: event.target.value});\n    }\n\n    componentDidMount(){ \n        var currentLocation = window.location.pathname;\n        console.log(\"INSIDE..\",currentLocation);\n        if (currentLocation.substring(1,14) == 'add-employees')\n        {\n            console.log(\"Its inside Create\");\n            return;\n        } else if (currentLocation.substring(1,15) == 'view-employees')\n        {\n            console.log(\"SETTING STATE..\");\n            this.setState(this.props.location.state);\n            this.setState({\n                employeeId: this.props.match.params.id,\n                isDisabled: true,\n                isHidden: true,\n                title:'View Employees'\n            })\n        }\n        else\n        {\n            this.setState(this.props.location.state);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <form>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-4\">\n                            <button class=\"btn btn-success\" onClick={ () => this.viewEmployeesSpecialization(this.state.employeeId) }\n                            style={{height : '40px', width : '120px', marginLeft : '5px'}}> Specialization </button>\n                            </div>\n                            <div class=\"form-group col-md-4\">\n                            <h1 style={{textAlign: 'center'}}> {this.state.title} </h1>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-6\">\n                            <label for=\"firstName\">First Name</label>\n                            <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\" id=\"firstName\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.firstName} onChange={this.changeFirstNameHandler}/>\n                            </div>\n                            <div class=\"form-group col-md-6\">\n                            <label for=\"lastName\">Last Name</label>\n                            <input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\" id=\"lastName\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.lastName} onChange={this.changeLastNameHandler}/>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"type\">Type</label>\n                            <select placeholder=\"Type\" name=\"type\" className=\"form-control\" id=\"type\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled}\n                            value={this.state.type} onChange={this.changeTypeHandler}>\n                            <option value=\"Contract\">Contract</option>\n                            <option value=\"Permanent\">Permanent</option>\n                            </select>\n                            </div>\n                            <div class=\"form-group col-md-4\">\n                            <label for=\"designation\">Designation</label>\n                            <input placeholder=\"Designation\" name=\"designation\" className=\"form-control\" id=\"designation\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled}\n                            value={this.state.designation} onChange={this.changeDesignationHandler}/>\n                            </div>\n                            <div class=\"form-group col-md-2\">\n                            <label for=\"dateOfBirth\">Date of Birth</label>\n                            <input type=\"date\" placeholder=\"Date of Birth\" name=\"dateOfBirth\" className=\"form-control\" id=\"dateOfBirth\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled}\n                            value={this.state.dateOfBirth} onChange={this.changeDateofBirthHandler}/>\n                            </div>\n                            <div class=\"form-group col-md-2\">\n                            <label for=\"gender\">Gender</label>\n                            <select placeholder=\"Gender\" name=\"gender\" className=\"form-control\" id=\"gender\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled}\n                            value={this.state.gender} onChange={this.changeGenderHandler}>\n                            <option value=\"M\">Male</option>\n                            <option value=\"F\">Female</option>\n                            <option value=\"O\">Other</option>\n                            </select>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-4\">\n                            <label for=\"contactNumber\">Contact Number</label>\n                            <input type=\"tel\" placeholder=\"Contact Number\" name=\"contactNumber\" className=\"form-control\" id=\"contactNumber\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\" value={this.state.contactNumber} onChange={this.changeContactNumberHandler}/>\n                            </div>\n                            <div class=\"form-group col-md-8\">\n                            <label for=\"emailId\">E-mail</label>\n                            <input type=\"email\" placeholder=\"E-mail\" name=\"emailId\" className=\"form-control\" id=\"emailId\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.emailId} onChange={this.changeEmailIdHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-8\">\n                            <label for=\"address\">Address</label>\n                            <input placeholder=\"Address\" name=\"address\" className=\"form-control\" id=\"address\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.address} onChange={this.changeAddressHandler}/>\n                            </div>\n                            <div class=\"form-group col-md-4\">\n                            <label for=\"salary\">Salary</label>\n                            <input type=\"number\" placeholder=\"Salary\" name=\"salary\" className=\"form-control\" id=\"salary\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.salary} onChange={this.changeSalaryHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-4\">\n                            <label for=\"city\">City</label>\n                            <input placeholder=\"City\" name=\"city\" className=\"form-control\" id=\"city\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.city} onChange={this.changeCityHandler}/>\n                            </div>\n                            <div class=\"form-group col-md-4\">\n                            <label for=\"state\">State</label>\n                            <input placeholder=\"State\" name=\"state\" className=\"form-control\" id=\"state\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.state} onChange={this.changeStateHandler}/>\n                            </div>\n                            <div class=\"form-group col-md-4\">\n                            <label for=\"zipCode\">Zip Code</label>\n                            <input placeholder=\"Zip Code\" name=\"zipCode\" className=\"form-control\" id=\"zipCode\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.zipCode} onChange={this.changeZipCodeHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-success\" onClick={this.saveEmployees} \n                        hidden={this.state.isHidden} disabled={this.state.isDisabled}\n                        style={{height : '40px', width : '100px', marginLeft : '350px'}}>Save</button>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}\n                        hidden={this.state.isHidden} disabled={this.state.isDisabled}\n                        style={{height : '40px', width : '100px', marginLeft : '300px'}}>Cancel</button>\n                        </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListEmployeesSpecializationComponent.jsx",["162","163"],"import React, { Component } from 'react'\nimport EmployeesService from '../services/EmployeesService'\n\nexport default class ListEmployeesSpecializationComponent extends Component {\n    constructor(props){\n        const employeesSpecialization = [];\n        super(props)\n            this.state = {\n                employeeId: this.props.match.params.id,\n                employeesSpecialization: []\n            }\n            \n        this.addEmployeesSpecialization = this.addEmployeesSpecialization.bind(this);\n        this.editEmployeesSpecialization = this.editEmployeesSpecialization.bind(this);\n        this.deleteEmployeesSpecialization = this.deleteEmployeesSpecialization.bind(this);\n    }\n\n    handleSubmitClicked() {\n        this.setState({\n          isDisabled: true\n        });\n      }\n\n    viewEmployeesSpecialization(id,specialization,yearsOfExperience){\n        this.props.history.push(`/view-specialization/${id}`, {employeeId: id, specialization: specialization, \n            yearsOfExperience: yearsOfExperience, title: \"View Employees Specializations\"});\n    } \n\n    addEmployeesSpecialization(){\n        this.props.history.push(`/add-employees-specialization/${this.state.employeeId}`);\n    }\n\n    editEmployeesSpecialization(id,specialization,yearsOfExperience){\n        this.props.history.push(`/update-employees-specialization/${id}`, { employeeId: id, specialization: specialization, \n            yearsOfExperience: yearsOfExperience, title: \"Update Employees Specializations\"});\n    }\n\n    deleteEmployeesSpecialization(id,specialization){\n        EmployeesService.deleteEmployeesSpecialization(id,specialization).then( res=> {\n            this.setState({employeesSpecialization: this.state.employeesSpecialization.filter(employeesSpecialization => employeesSpecialization.specialization != specialization)});\n        });\n    }\n\n    componentDidMount(){ \n        EmployeesService.getEmployeesSpecializationById(this.state.employeeId).then((res) => {          \n            this.setState({ employeesSpecialization: res.data });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\">Employees Specialization</h2>\n                <div className=\"row\">\n                    <button className=\"btn btn-primary\" onClick={this.addEmployeesSpecialization}> Add Specialization</button>\n                </div>\n                <div className=\"row\">\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th>Specialization</th>\n                                <th>Years of Experience</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.employeesSpecialization.map(\n                                    employeesSpecialization =>\n                                    <tr key = {employeesSpecialization.employeeId}>\n                                        <td> {employeesSpecialization.specialization} </td>\n                                        <td> {employeesSpecialization.yearsOfExperience} </td>\n                                        <td>\n                                            <button onClick={ () => this.viewEmployeesSpecialization(employeesSpecialization.employeeId,employeesSpecialization.specialization,employeesSpecialization.yearsOfExperience) } className=\"btn btn-info\">View</button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.editEmployeesSpecialization(employeesSpecialization.employeeId,employeesSpecialization.specialization,employeesSpecialization.yearsOfExperience) } className=\"btn btn-info\" >Update</button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteEmployeesSpecialization(employeesSpecialization.employeeId,employeesSpecialization.specialization) } className=\"btn btn-danger\">Delete</button>\n                                        </td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>    \n                </div>\n            </div>\n        );\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateEmployeesSpecializationComponent.jsx",["164","165","166"],"import React, { Component } from 'react'\nimport EmployeesService from '../services/EmployeesService';\n\nexport default class CreateEmployeesSpecializationComponent extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            employeeId: this.props.match.params.id,\n            specialization: '',\n            yearsOfExperience: '',\n            isDisabled: false,\n            isHidden: false,\n            errorMessage: '',\n            title: 'Add Employees Specialization'\n        }\n        this.changeSpecializationHandler = this.changeSpecializationHandler.bind(this);\n        this.changeYearsOfExperienceHandler = this.changeYearsOfExperienceHandler.bind(this);\n        this.saveEmployeesSpecialization = this.saveEmployeesSpecialization.bind(this);\n    }\n\n    saveEmployeesSpecialization = (e) => {\n        e.preventDefault();\n        let employeeSpecialization = {\n        employeeId: this.props.match.params.id,\n        specialization: this.state.specialization,\n        yearsOfExperience: this.state.yearsOfExperience};\n        var currentLocation = window.location.pathname;\n        if (currentLocation.substring(1,29) == 'add-employees-specialization')\n        {\n            console.log(\"Patients is : \" +JSON.stringify(employeeSpecialization));\n            EmployeesService.createEmployeesSpecialization(employeeSpecialization).then(res =>{\n                this.props.history.push(`/view-employees-specialization/${this.state.employeeId}`);\n            });\n        }\n        else\n        {\n            console.log(\"Saving the Disease\", this.state);\n            EmployeesService.updateEmployeesSpecialization(employeeSpecialization, this.state.employeeId).then(res =>{\n                this.props.history.push(`/view-employees-specialization/${this.state.employeeId}`);\n            });\n        }\n    }\n\n    cancel(){\n        this.props.history.push(`/view-employees-specialization/${this.state.employeeId}`);\n    }\n\n    changeSpecializationHandler=(event) => {\n        this.setState({specialization: event.target.value});\n    }    \n    changeYearsOfExperienceHandler=(event) => {\n        this.setState({yearsOfExperience: event.target.value});\n    }\n\n    componentDidMount(){ \n        var currentLocation = window.location.pathname;\n        if (currentLocation.substring(1,29) == 'add-employees-specialization')\n        {\n            console.log(\"Its inside Create\");\n            return;\n        } else if (currentLocation.substring(1,20) == 'view-specialization')\n        {\n            console.log(\"Its inside View..\");\n            this.setState(this.props.location.state);\n            this.setState({\n                employeeId: this.props.match.params.id,\n                isDisabled: true,\n                isHidden: true,\n                title:'View Employees Specialization'\n            })\n        }\n        else\n        {\n            this.setState(this.props.location.state);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <form>\n                    <h1 style={{textAlign: 'center'}}> {this.state.title} </h1>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-12\">\n                            <label>Specialization</label>\n                            <input type=\"text\" placeholder=\"Specialization\" name=\"specialization\" className=\"form-control\" id=\"specialization\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.specialization} onChange={this.changeSpecializationHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-12\">\n                            <label>Years of Experience</label>\n                            <input type=\"text\" placeholder=\"Years of Experience\" name=\"yearsOfExperience\" className=\"form-control\" id=\"yearsOfExperience\"\n                            style={{height : '30px'}} disabled={this.state.isDisabled}\n                            value={this.state.yearsOfExperience} onChange={this.changeYearsOfExperienceHandler}/>\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-success\" onClick={this.saveEmployeesSpecialization} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '350px'}}>Save</button>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '300px'}}>Cancel</button>\n                        </div>\n                        </div>\n                    </form>\n                </div>                \n            </div>\n        )\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListRoomsComponent.jsx",["167"],"import React, { Component } from 'react'\nimport AdminService from '../services/AdminService'\n\nexport default class ListRoomsComponents extends Component {\n    constructor(props){\n        const rooms = [];\n        super(props)\n            this.state = {\n                rooms: []\n            }\n            \n        this.addRooms = this.addRooms.bind(this);\n        this.editRooms = this.editRooms.bind(this);\n        this.deleteRooms = this.deleteRooms.bind(this);\n    }\n\n    handleSubmitClicked() {\n        this.setState({\n          isDisabled: true\n        });\n      }\n\n    addRooms(){\n        this.props.history.push('/add-rooms',{room_entries: this.state.rooms});\n    }\n\n    editRooms(id,floorNumber,roomNumber,roomType,charges){\n        this.props.history.push(`/update-rooms/${id}`,{ roomId: id, floorNumber: floorNumber, \n            roomNumber: roomNumber, roomType: roomType, charges: charges , title: \"Update Rooms\"});\n    }\n\n    viewRooms(id,floorNumber,roomNumber,roomType,charges){\n        this.props.history.push(`/view-rooms/${id}`, {roomId: id, floorNumber: floorNumber, \n            roomNumber: roomNumber, roomType: roomType , charges: charges, title: \"View Rooms\"});\n    }\n\n    deleteRooms(id){\n        AdminService.deleteRooms(id).then( res=> {\n            this.setState({rooms: this.state.rooms.filter(room => room.roomId !== id)});\n        });\n    }\n\n    componentDidMount(){ \n        AdminService.getRooms().then((res) => {\n            console.log(res.data);            \n            this.setState({ rooms: res.data });\n        });\n    }\n\n    render() {\n                \n        return (\n                    <div>\n                        <h2 className=\"text-center\">Rooms List</h2>\n                        <div className=\"row\">\n                            <button className=\"btn btn-primary\" onClick={this.addRooms}> Add Rooms</button>\n                        </div>\n                        <div className=\"row\">\n                            <table className=\"table table-bordered table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th>Floor</th>\n                                        <th>Room</th>\n                                        <th>Type</th>\n                                        <th>Charges</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.rooms.map(\n                                            rooms =>\n                                            <tr key = {rooms.roomId}>\n                                                <td> {rooms.floorNumber} </td>\n                                                <td> {rooms.roomNumber} </td>\n                                                <td> {rooms.roomType} </td>\n                                                <td> {rooms.charges} </td>\n                                                <td>\n                                                    <button onClick={ () => this.viewRooms(rooms.roomId,rooms.floorNumber,rooms.roomNumber,rooms.roomType,rooms.charges) } className=\"btn btn-info\">View</button>\n                                                    <button style={{marginLeft: \"10px\"}} onClick={ () => this.editRooms(rooms.roomId,rooms.floorNumber,rooms.roomNumber,rooms.roomType,rooms.charges) } className=\"btn btn-info\">Update</button>\n                                                    <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteRooms(rooms.roomId) } className=\"btn btn-danger\">Delete</button>\n                                                </td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>    \n                        </div>\n                    </div>\n                );\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/services/AdminService.js",[],"/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateRoomsComponent.jsx",["168","169","170","171","172","173","174","175","176","177","178","179"],"import React, { Component } from 'react'\nimport AdminService from '../services/AdminService';\n\nexport default class CreateRoomsComponent extends Component {\n    constructor(props){\n        const room_entries = [];\n        super(props)\n        this.state = {\n            room_entries: [],\n            roomId: this.props.match.params.id,\n            floorNumber: '',\n            roomNumber: '',\n            roomType: '',            \n            charges: '',\n            isDisabled: false,\n            isHidden: false,\n            readOnly: false,\n            floorNumberError: '',\n            roomNumberError: '',\n            roomTypeError: '',\n            chargesError: '',\n            title: 'Add Rooms'\n        }\n        this.changeRoomTypeHandler = this.changeRoomTypeHandler.bind(this);\n        this.changeFloorNumberHandler = this.changeFloorNumberHandler.bind(this);\n        this.changeRoomNumberHandler = this.changeRoomNumberHandler.bind(this);\n        this.changeChargesHandler = this.changeChargesHandler.bind(this);\n        this.saveRooms = this.saveRooms.bind(this);\n    }\n\n    validate = () => {\n        let floorNumberError = \"\";\n        let roomTypeError = \"\";\n        let roomNumberError = \"\";\n        let chargesError = \"\";\n\n        console.log(\"Floor Number\",this.state.floorNumber);\n\n        if(this.state.floorNumber == \"\")\n        {\n            floorNumberError = \"Enter a Floor\";\n        }\n        else{\n            floorNumberError = \"\";\n            this.setState({floorNumberError});\n        }\n\n        if(this.state.roomNumber == \"\")\n        {\n            roomNumberError = \"Enter a Room\";\n        }else if(this.state.roomNumber != \"\")\n        {\n            const index = this.state.room_entries.findIndex((room)=>{\n            return (room.floorNumber == this.state.floorNumber && room.roomNumber == this.state.roomNumber)\n        });\n            if(index != -1){\n                roomNumberError = \"Room Number \"+this.state.roomNumber+\" already exists\";\n            }else{\n                roomNumberError = \"\";\n                this.setState({roomNumberError});\n            }\n        }\n        else{\n            roomNumberError = \"\";\n            this.setState({roomNumberError});\n        }\n\n        if(this.state.roomType == \"\")\n        {\n            roomTypeError = \"Enter a Type\";\n        }else{\n            roomTypeError = \"\";\n            this.setState({roomTypeError});\n        }\n\n        if(this.state.charges == \"\")\n        {\n            chargesError = \"Enter the Charges\";\n        }else{\n            chargesError = \"\";\n            this.setState({chargesError});\n        }\n\n        if(floorNumberError){\n            this.setState({floorNumberError});\n            return false;\n        }\n\n        if(roomNumberError){\n            this.setState({roomNumberError});\n            return false;\n        }\n\n        if(roomTypeError){\n            this.setState({roomTypeError});\n            return false;\n        }\n\n        if(chargesError){\n            this.setState({chargesError});\n            return false;\n        }\n\n        return true;\n\n    }\n\n    saveRooms = (e) => {\n        e.preventDefault();\n        let rooms = {\n        roomId: this.props.match.params.id,\n        floorNumber: this.state.floorNumber,\n        roomNumber: this.state.roomNumber,\n        roomType: this.state.roomType,\n        charges: this.state.charges};\n\n        const isValid = this.validate();\n\n        console.log(\"Room Data is :\",rooms);    \n\n        if(isValid)\n        {\n            var currentLocation = window.location.pathname;\n            if (currentLocation.substring(1,10) == 'add-rooms')\n            {\n                console.log(\"Patients is : \" +JSON.stringify(rooms));\n                AdminService.createRooms(rooms).then(res =>{\n                    this.props.history.push('/rooms');\n                });\n            }\n            else    \n            {\n                console.log(\"Saving the Rooms\", this.state);\n                AdminService.updateRooms(rooms, this.state.roomId).then(res =>{\n                    this.props.history.push('/rooms');\n                });\n            }\n        }    \n    }\n\n    viewRoomsAvailability(id){        \n        console.log(\"Listing Rooms Availability :\", id);\n        this.props.history.push(`/view-rooms-availability/${id}`);\n    }\n\n    viewBeds(id,roomNumber){        \n        this.props.history.push(`/view-beds/${id}`,{ roomNumber: roomNumber});\n    }\n\n    cancel(){\n        this.props.history.push(`/view-rooms/${this.state.roomId}`);\n    }\n\n    changeRoomTypeHandler=(event) => {\n        this.setState({roomType: event.target.value});\n    }    \n    changeFloorNumberHandler=(event) => {\n        this.setState({floorNumber: event.target.value});\n    }    \n    changeRoomNumberHandler=(event) => {\n        this.setState({roomNumber: event.target.value});\n    }\n    changeChargesHandler=(event) => {\n        this.setState({charges: event.target.value});\n    }    \n\n    componentDidMount(){ \n        var currentLocation = window.location.pathname;\n        if (currentLocation.substring(1,10) == 'add-rooms')\n        {\n            console.log(\"Its inside Create\");\n            this.setState({room_entries:this.props.location.state.room_entries});\n            return;\n        } else if (currentLocation.substring(1,11) == 'view-rooms')\n        {\n            console.log(\"Its inside View..\");\n            this.setState(this.props.location.state);\n            this.setState({\n                roomId: this.props.match.params.id,\n                isDisabled: true,\n                isHidden: true,\n                title:'View Rooms'\n            })\n        }\n        else\n        {\n            console.log(\"Updating....\");\n            this.setState({\n                readOnly: true,\n            })\n            this.setState(this.props.location.state);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <form>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-1.5\">\n                            <button class=\"btn btn-success\" onClick={ () => this.viewRoomsAvailability(this.state.roomId) }\n                            style={{height : '40px', width : '100px'}}> Availability </button>\n                            </div>\n                            <div class=\"form-group col-md-2\">\n                            <button class=\"btn btn-success\" onClick={ () => this.viewBeds(this.state.roomId,this.state.roomNumber) }\n                            style={{height : '40px', width : '60px'}}> Beds </button>\n                            </div>\n                            <div class=\"form-group col-md-4\">\n                            <h1 style={{textAlign: 'center'}}> {this.state.title} </h1>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-2\">\n                            <label>Floor</label>\n                            <input type=\"text\" placeholder=\"Floor\" name=\"floor\" className=\"form-control\" id=\"floor\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled} readOnly={this.state.readOnly}\n                            value={this.state.floorNumber} onChange={this.changeFloorNumberHandler}/>\n                            {this.state.floorNumberError ? (<div style={{ fontSize:12, color:'red' }}>\n                                {this.state.floorNumberError}</div>):null}\n                            </div>\n                            <div class=\"form-group col-md-2\">\n                            <label>Room</label>\n                            <input type=\"text\" placeholder=\"Room\" name=\"room\" className=\"form-control\" id=\"room\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled} readOnly={this.state.readOnly}\n                            value={this.state.roomNumber} onChange={this.changeRoomNumberHandler}/>\n                            {this.state.roomNumberError ? (<div style={{ fontSize:12, color:'red' }}>\n                                {this.state.roomNumberError}</div>):null}\n                            </div>\n                            <div class=\"form-group col-md-6\">\n                            <label>Type</label>\n                            <select placeholder=\"Type\" name=\"type\" className=\"form-control\" id=\"type\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled}\n                            value={this.state.roomType} onChange={this.changeRoomTypeHandler}>\n                            <option value=\"Semi-Deluxe\">Semi-Deluxe</option>\n                            <option value=\"Deluxe\">Deluxe</option>\n                            <option value=\"General\">General</option>\n                            <option value=\"Special\">Special</option>\n                            </select>\n                            {this.state.roomTypeError ? (<div style={{ fontSize:12, color:'red' }}>\n                                {this.state.roomTypeError}</div>):null}\n                            </div>\n                            <div class=\"form-group col-md-2\">\n                            <label>Charges</label>\n                            <input type=\"number\" placeholder=\"Charges\" name=\"charges\" className=\"form-control\" id=\"charges\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled}\n                            value={this.state.charges} onChange={this.changeChargesHandler}/>\n                            {this.state.chargesError ? (<div style={{ fontSize:12, color:'red' }}>\n                                {this.state.chargesError}</div>):null}\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-success\" onClick={this.saveRooms} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '350px'}}>Save</button>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '300px'}}>Cancel</button>\n                        </div>\n                        </div>\n                    </form>\n                </div>                \n            </div>\n        )\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListRoomsAvailabilityComponent.jsx",["180","181"],"import React, { Component } from 'react'\nimport AdminService from '../services/AdminService'\n\nexport default class ListRoomsAvailabilityComponent extends Component {\n    constructor(props){\n        const roomsAvailability = [];\n        super(props)\n            this.state = {\n                roomId: this.props.match.params.id,\n                roomsAvailability: []\n            }\n            \n        this.addRoomsAvaiability = this.addRoomsAvaiability.bind(this);\n        this.editRoomsAvaiability = this.editRoomsAvaiability.bind(this);\n        this.deleteRoomsAvaiability = this.deleteRoomsAvaiability.bind(this);\n    }\n\n    handleSubmitClicked() {\n        this.setState({\n          isDisabled: true\n        });\n      }\n\n    viewRoomsAvailability(id,date,time,available){\n        this.props.history.push(`/view-availability/${id}`, {roomId: id, date: date, \n            time: time, available: available, title: \"View Availability\"});\n    } \n\n    addRoomsAvaiability(){\n        this.props.history.push(`/add-rooms-availability/${this.state.roomId}`);\n    }\n\n    editRoomsAvaiability(id,date,time,available){\n        this.props.history.push(`/update-availability/${id}`, {roomId: id, date: date, \n            time: time, available: available, title: \"Edit Availability\"});\n    }\n\n    deleteRoomsAvaiability(id,date,time){\n        AdminService.deleteRoomsAvailability(id,date,time).then( res=> {\n            this.setState({roomsAvailability: this.state.roomsAvailability.filter(roomsAvailability => roomsAvailability.date != date)});\n        });\n    }\n\n    componentDidMount(){ \n        AdminService.getRoomsAvailabilityById(this.state.roomId).then((res) => {    \n            // var newData = this.state.roomsAvailability.concat([res.data]);        \n            this.setState({ roomsAvailability: res.data });            \n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\"> Availability</h2>\n                <div className=\"row\">\n                    <button className=\"btn btn-primary\" onClick={this.addRoomsAvaiability}> Add Availability</button>\n                </div>\n                <div className=\"row\">\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>Time</th>\n                                <th>Available</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.roomsAvailability.map(roomsAvailability =>\n                                    <tr key = {roomsAvailability.roomId}>\n                                        <td> {roomsAvailability.date} </td>\n                                        <td> {roomsAvailability.time} </td>\n                                        <td> {roomsAvailability.available} </td>\n                                        <td>\n                                            <button onClick={ () => this.viewRoomsAvailability(roomsAvailability.roomId,roomsAvailability.date,roomsAvailability.time,roomsAvailability.available) } className=\"btn btn-info\">View</button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.editRoomsAvaiability(roomsAvailability.roomId,roomsAvailability.date,roomsAvailability.time,roomsAvailability.available) } className=\"btn btn-info\">Update</button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteRoomsAvaiability(roomsAvailability.roomId,roomsAvailability.date,roomsAvailability.time) } className=\"btn btn-danger\">Delete</button>\n                                        </td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>    \n                </div>\n            </div>\n        );\n    }\n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateRoomsAvailabilityComponent.jsx",["182","183","184","185","186","187","188"],"import React, { Component } from 'react'\nimport AdminService from '../services/AdminService';\n\nexport default class CreateRoomsAvailabilityComponent extends Component {\n    constructor(props){\n        const roomAvailability = [];\n        super(props)\n        this.state = {\n            roomsAvailability: [],\n            roomId: this.props.match.params.id,\n            date: '',\n            time: '',\n            available: '',            \n            isDisabled: false,\n            isHidden: false,\n            readOnly: false,\n            dateError: '',\n            timeError: '',\n            availableError: '',\n            title: 'Add Availability'\n        }\n        this.changeDateHandler = this.changeDateHandler.bind(this);\n        this.changeTimeHandler = this.changeTimeHandler.bind(this);\n        this.changeAvailableHandler = this.changeAvailableHandler.bind(this);\n        this.saveRoomsAvailability = this.saveRoomsAvailability.bind(this);\n    }\n\n    validate = () => {\n        let dateError = \"\";\n        let timeError = \"\";\n        let availableError = \"\";\n\n        if(this.state.date == \"\")\n        {\n            dateError = \"Enter a Date\";\n        }\n        else{\n            dateError = \"\";\n            this.setState({dateError});\n        }\n\n        if(this.state.time == \"\")\n        {\n            timeError = \"Enter a Time\";\n        }else{\n            timeError = \"\";\n            this.setState({timeError});\n        }\n\n        if(this.state.available == \"\")\n        {\n            availableError = \"Enter the Availability\";\n        }else{\n            availableError = \"\";\n            this.setState({availableError});\n        }\n\n        if(dateError){\n            this.setState({dateError});\n            return false;\n        }\n\n        if(timeError){\n            this.setState({timeError});\n            return false;\n        }\n\n        if(availableError){\n            this.setState({availableError});\n            return false;\n        }\n\n        return true;\n\n    }\n\n    saveRoomsAvailability = (e) => {\n        e.preventDefault();\n        let roomsAvailability = {\n        roomId: this.props.match.params.id,\n        date: this.state.date,\n        time: this.state.time,\n        available: this.state.available};\n\n\n        const isValid = this.validate();\n\n        if(isValid)\n        {\n            var currentLocation = window.location.pathname;\n            if (currentLocation.substring(1,23) == 'add-rooms-availability')\n            {\n                console.log(\"creating..\");\n                AdminService.createRoomsAvailability(roomsAvailability).then(res =>{\n                    this.props.history.push(`/view-rooms-availability/${this.state.roomId}`);\n                });\n            }\n            else    \n            {\n                AdminService.updateRoomsAvailability(roomsAvailability, this.state.roomId).then(res =>{\n                    this.props.history.push(`/view-rooms-availability/${this.state.roomId}`);\n                });\n            }\n        }    \n    }\n\n    viewRoomsAvailability(id){        \n        console.log(\"Listing Rooms Availability :\", id);\n        this.props.history.push(`/view-rooms-availability/${id}`);\n    }\n\n    cancel(){\n        this.props.history.push(`/view-rooms-availability/${this.state.roomId}`);\n    }\n\n    changeDateHandler=(event) => {\n        this.setState({date: event.target.value});\n    }    \n    changeTimeHandler=(event) => {\n        this.setState({time: event.target.value});\n    }    \n    changeAvailableHandler=(event) => {\n        this.setState({available: event.target.value});\n    }\n\n    componentDidMount(){ \n        var currentLocation = window.location.pathname;\n        if (currentLocation.substring(1,23) == 'add-rooms-availability')\n        {\n            console.log(\"Its inside Create\");\n            return;\n        } else if (currentLocation.substring(1,18) == 'view-availability')\n        {\n            console.log(\"Its inside View..\");\n            this.setState(this.props.location.state);\n            this.setState({\n                roomId: this.props.match.params.id,\n                isDisabled: true,\n                isHidden: true,\n                title:'View Availability'\n            })\n        }\n        else\n        {\n            console.log(\"Updating....\");\n            this.setState({\n                readOnly: true,\n            })\n            this.setState(this.props.location.state);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <form>\n                        <h1 style={{textAlign: 'center'}}> {this.state.title} </h1>                                            \n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-2\">\n                            <label>Date</label>\n                            <input type=\"date\" placeholder=\"Date\" name=\"date\" className=\"form-control\" id=\"date\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled} readOnly={this.state.readOnly}\n                            value={this.state.date} onChange={this.changeDateHandler}/>\n                            {this.state.dateError ? (<div style={{ fontSize:12, color:'red' }}>\n                                {this.state.dateError}</div>):null}\n                            </div>\n                            <div class=\"form-group col-md-2\">\n                            <label>Time</label>\n                            <input type=\"time\" placeholder=\"Time\" name=\"time\" className=\"form-control\" id=\"time\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled} readOnly={this.state.readOnly}\n                            value={this.state.time} onChange={this.changeTimeHandler}/>\n                            {this.state.timeError ? (<div style={{ fontSize:12, color:'red' }}>\n                                {this.state.timeError}</div>):null}\n                            </div>\n                            <div class=\"form-group col-md-6\">\n                            <label>Available</label>\n                            <select placeholder=\"Available\" name=\"available\" className=\"form-control\" id=\"available\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled}\n                            value={this.state.available} onChange={this.changeAvailableHandler}>\n                            <option value=\"Y\">Yes</option>\n                            <option value=\"N\">No</option>\n                            </select>\n                            {this.state.availableError ? (<div style={{ fontSize:12, color:'red' }}>\n                                {this.state.availableError}</div>):null}\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-success\" onClick={this.saveRoomsAvailability} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '350px'}}>Save</button>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '300px'}}>Cancel</button>\n                        </div>\n                        </div>\n                    </form>\n                </div>                \n            </div>\n        )\n    }\n    \n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListBedsComponent.jsx",["189"],"/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateBedsComponent.jsx",["190","191","192","193","194","195","196","197","198","199"],"import React, { Component } from 'react'\nimport AdminService from '../services/AdminService';\n\nexport default class CreateBedsComponent extends Component {\n    constructor(props){\n        const beds = [];\n        super(props)\n        this.state = {\n            beds: [],\n            bedId: '',\n            roomId: this.props.location.state.roomId,//this.props.match.params.id,\n            roomNumber: '',\n            bedNumber: '',\n            isDisabled: false,\n            isHidden: false,\n            readOnly: false,\n            bedNumberError: '',\n            title: 'Add Beds'\n        }\n        this.changeBedNumberHandler = this.changeBedNumberHandler.bind(this);\n        this.saveBeds = this.saveBeds.bind(this);\n    }\n\n    validate = () => {\n        let bedNumberError = \"\";\n\n        if(this.state.bedNumber == \"\")\n        {\n            bedNumberError = \"Enter a Bed\";\n        }else if(this.state.bedNumber != \"\")\n        {\n            const index = this.state.beds.findIndex((beds)=>{\n            return (beds.roomId == this.state.roomId && beds.bedNumber == this.state.bedNumber)\n        });\n            console.log(\"The Index is : \", index);\n            console.log(\"Beds are : \", this.state.beds);\n            console.log(\"The Room & Bed are : \", this.state.roomId, this.state.bedNumber);\n            if(index != -1){\n                bedNumberError = \"Bed Number \"+this.state.bedNumber+\" already exists\";\n            }else{\n                bedNumberError = \"\";\n                this.setState({bedNumberError});\n            }\n        }\n        else{\n            bedNumberError = \"\";\n            this.setState({bedNumberError});\n        }\n\n        if(bedNumberError){\n            this.setState({bedNumberError});\n            return false;\n        }\n\n        return true;\n\n    }\n\n    saveBeds = (e) => {\n        e.preventDefault();\n        let bed = {\n        bedId: this.props.match.params.id,\n        roomId: this.state.roomId,\n        bedNumber: this.state.bedNumber};\n\n        console.log(\"Bed is :\", bed);    \n\n        const isValid = this.validate();\n\n        if(isValid)\n        {\n            var currentLocation = window.location.pathname;\n            if (currentLocation.substring(1,9) == 'add-beds')\n            {\n                AdminService.createBeds(bed).then(res =>{\n                    this.props.history.push(`/view-beds/${this.state.roomId}`);\n                });\n            }\n            else    \n            {\n                console.log(\"Bed is: \", bed);\n                console.log(\"Bed ID is:\",this.state.bedId); \n                AdminService.updateBeds(bed,this.state.bedId).then(res =>{\n                    this.props.history.push(`/view-beds/${this.state.roomId}`);\n                });\n            }\n        }    \n    }\n\n    cancel(){\n        this.props.history.push(`/view-beds/${this.state.roomId}`);\n    }\n\n    viewBedsAvailability(id){        \n        console.log(\"Listing Rooms Availability :\", id);\n        this.props.history.push(`/view-beds-availability/${id}`);\n    }\n\n    viewBeds(id){        \n        this.props.history.push(`/view-beds/${id}`);\n    }\n\n    changeBedNumberHandler=(event) => {\n        this.setState({bedNumber: event.target.value});\n    }    \n\n    componentDidMount(){ \n        var currentLocation = window.location.pathname;\n        if (currentLocation.substring(1,9) == 'add-beds')\n        {\n            console.log(\"RoomID is :\",this.props.location.state.roomId);\n            this.setState({roomId: this.props.location.state.roomId, beds: this.props.location.state.beds, roomNumber: this.props.location.state.roomNumber});\n            console.log(\"RoomID inside Mount:\", this.state.roomId);\n            return;\n        } else if (currentLocation.substring(1,9) == 'view-bed')\n        {\n            console.log(\"Its inside View..\");\n            this.setState(this.props.location.state);\n            this.setState({\n                roomId: this.props.location.state.roomId,\n                roomNumber: this.props.location.state.roomNumber,\n                isDisabled: true,\n                isHidden: true,\n                title:'View Beds'\n            })\n        }\n        else\n        {\n            console.log(\"Updating....\");\n            this.setState(this.props.location.state);\n            this.setState({\n                roomId: this.props.location.state.roomId,\n                roomNumber: this.props.location.state.roomNumber,\n                readOnly: true,\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <form>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-2\">\n                            <button class=\"btn btn-success\" onClick={ () => this.viewBedsAvailability(this.state.bedId) }\n                            style={{height : '40px', width : '100px'}}> Availability </button>\n                            </div>\n                            <div class=\"form-group col-md-4\">\n                            <h1 style={{textAlign: 'center'}}> {this.state.title} </h1>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-2\">\n                            <label>Room</label>\n                            <input type=\"text\" placeholder=\"Room\" name=\"room\" className=\"form-control\" id=\"room\"\n                            style={{height : '35px'}} readOnly={this.state.readOnly} disabled={this.state.isDisabled}\n                            value={this.state.roomNumber}/>\n                            </div>\n                            <div class=\"form-group col-md-2\">\n                            <label>Bed</label>\n                            <input type=\"text\" placeholder=\"Bed\" name=\"bed\" className=\"form-control\" id=\"bed\"\n                            style={{height : '35px'}} disabled={this.state.isDisabled}\n                            value={this.state.bedNumber} onChange={this.changeBedNumberHandler}/>\n                            {this.state.bedNumberError ? (<div style={{ fontSize:12, color:'red' }}>\n                                {this.state.bedNumberError}</div>):null}\n                            </div>\n                        </div> \n                        <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-success\" onClick={this.saveBeds} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden}\n                        style={{height : '40px', width : '100px', marginLeft : '350px'}}>Save</button>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} disabled={this.state.isDisabled}\n                        hidden={this.state.isHidden} disabled={this.state.isDisabled}\n                        style={{height : '40px', width : '100px', marginLeft : '300px'}}>Cancel</button>\n                        </div>\n                        </div>\n                    </form>\n                </div>                \n            </div>\n        )\n    }\n    \n}\n","/Users/swamy/Desktop/Hospitals/react-hospital/src/components/ListBedsAvailabilityComponent.jsx",["200","201"],"/Users/swamy/Desktop/Hospitals/react-hospital/src/components/CreateBedsAvailabilityComponent.jsx",["202","203","204","205","206","207","208"],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":1,"column":8,"nodeType":"215","messageId":"216","endLine":1,"endColumn":12},{"ruleId":"213","severity":1,"message":"217","line":30,"column":10,"nodeType":"215","messageId":"216","endLine":30,"endColumn":15},{"ruleId":"213","severity":1,"message":"218","line":31,"column":9,"nodeType":"215","messageId":"216","endLine":31,"endColumn":19},{"ruleId":"213","severity":1,"message":"219","line":7,"column":15,"nodeType":"215","messageId":"216","endLine":7,"endColumn":23},{"ruleId":"220","severity":1,"message":"221","line":9,"column":26,"nodeType":"222","endLine":9,"endColumn":56},{"ruleId":"213","severity":1,"message":"223","line":7,"column":15,"nodeType":"215","messageId":"216","endLine":7,"endColumn":29},{"ruleId":"224","severity":1,"message":"225","line":66,"column":49,"nodeType":"226","messageId":"227","endLine":66,"endColumn":51},{"ruleId":"220","severity":1,"message":"228","line":15,"column":33,"nodeType":"222","endLine":15,"endColumn":118},{"ruleId":"209","replacedBy":"229"},{"ruleId":"211","replacedBy":"230"},{"ruleId":"213","severity":1,"message":"223","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":29},{"ruleId":"224","severity":1,"message":"231","line":42,"column":119,"nodeType":"226","messageId":"227","endLine":42,"endColumn":121},{"ruleId":"224","severity":1,"message":"231","line":42,"column":151,"nodeType":"226","messageId":"227","endLine":42,"endColumn":153},{"ruleId":"224","severity":1,"message":"231","line":42,"column":185,"nodeType":"226","messageId":"227","endLine":42,"endColumn":187},{"ruleId":"224","severity":1,"message":"225","line":37,"column":45,"nodeType":"226","messageId":"227","endLine":37,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":73,"column":45,"nodeType":"226","messageId":"227","endLine":73,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":77,"column":51,"nodeType":"226","messageId":"227","endLine":77,"endColumn":53},{"ruleId":"213","severity":1,"message":"232","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":31},{"ruleId":"224","severity":1,"message":"231","line":40,"column":126,"nodeType":"226","messageId":"227","endLine":40,"endColumn":128},{"ruleId":"224","severity":1,"message":"225","line":28,"column":45,"nodeType":"226","messageId":"227","endLine":28,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":58,"column":45,"nodeType":"226","messageId":"227","endLine":58,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":62,"column":51,"nodeType":"226","messageId":"227","endLine":62,"endColumn":53},{"ruleId":"213","severity":1,"message":"233","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":24},{"ruleId":"224","severity":1,"message":"225","line":59,"column":45,"nodeType":"226","messageId":"227","endLine":59,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":129,"column":45,"nodeType":"226","messageId":"227","endLine":129,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":133,"column":52,"nodeType":"226","messageId":"227","endLine":133,"endColumn":54},{"ruleId":"213","severity":1,"message":"234","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":38},{"ruleId":"224","severity":1,"message":"231","line":40,"column":161,"nodeType":"226","messageId":"227","endLine":40,"endColumn":163},{"ruleId":"224","severity":1,"message":"225","line":30,"column":45,"nodeType":"226","messageId":"227","endLine":30,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":59,"column":45,"nodeType":"226","messageId":"227","endLine":59,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":63,"column":52,"nodeType":"226","messageId":"227","endLine":63,"endColumn":54},{"ruleId":"213","severity":1,"message":"235","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":20},{"ruleId":"213","severity":1,"message":"236","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":27},{"ruleId":"224","severity":1,"message":"225","line":39,"column":35,"nodeType":"226","messageId":"227","endLine":39,"endColumn":37},{"ruleId":"224","severity":1,"message":"225","line":48,"column":34,"nodeType":"226","messageId":"227","endLine":48,"endColumn":36},{"ruleId":"224","severity":1,"message":"231","line":51,"column":40,"nodeType":"226","messageId":"227","endLine":51,"endColumn":42},{"ruleId":"224","severity":1,"message":"225","line":54,"column":38,"nodeType":"226","messageId":"227","endLine":54,"endColumn":40},{"ruleId":"224","severity":1,"message":"225","line":54,"column":83,"nodeType":"226","messageId":"227","endLine":54,"endColumn":85},{"ruleId":"224","severity":1,"message":"231","line":56,"column":22,"nodeType":"226","messageId":"227","endLine":56,"endColumn":24},{"ruleId":"224","severity":1,"message":"225","line":68,"column":32,"nodeType":"226","messageId":"227","endLine":68,"endColumn":34},{"ruleId":"224","severity":1,"message":"225","line":76,"column":31,"nodeType":"226","messageId":"227","endLine":76,"endColumn":33},{"ruleId":"224","severity":1,"message":"225","line":124,"column":49,"nodeType":"226","messageId":"227","endLine":124,"endColumn":51},{"ruleId":"224","severity":1,"message":"225","line":169,"column":45,"nodeType":"226","messageId":"227","endLine":169,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":174,"column":52,"nodeType":"226","messageId":"227","endLine":174,"endColumn":54},{"ruleId":"213","severity":1,"message":"237","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":32},{"ruleId":"224","severity":1,"message":"231","line":40,"column":127,"nodeType":"226","messageId":"227","endLine":40,"endColumn":129},{"ruleId":"213","severity":1,"message":"238","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":31},{"ruleId":"224","severity":1,"message":"225","line":33,"column":28,"nodeType":"226","messageId":"227","endLine":33,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":42,"column":28,"nodeType":"226","messageId":"227","endLine":42,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":50,"column":33,"nodeType":"226","messageId":"227","endLine":50,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":91,"column":49,"nodeType":"226","messageId":"227","endLine":91,"endColumn":51},{"ruleId":"224","severity":1,"message":"225","line":128,"column":45,"nodeType":"226","messageId":"227","endLine":128,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":132,"column":52,"nodeType":"226","messageId":"227","endLine":132,"endColumn":54},{"ruleId":"213","severity":1,"message":"239","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":19},{"ruleId":"213","severity":1,"message":"239","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":19},{"ruleId":"224","severity":1,"message":"225","line":27,"column":33,"nodeType":"226","messageId":"227","endLine":27,"endColumn":35},{"ruleId":"224","severity":1,"message":"231","line":30,"column":39,"nodeType":"226","messageId":"227","endLine":30,"endColumn":41},{"ruleId":"224","severity":1,"message":"225","line":33,"column":33,"nodeType":"226","messageId":"227","endLine":33,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":33,"column":72,"nodeType":"226","messageId":"227","endLine":33,"endColumn":74},{"ruleId":"224","severity":1,"message":"231","line":38,"column":22,"nodeType":"226","messageId":"227","endLine":38,"endColumn":24},{"ruleId":"224","severity":1,"message":"225","line":73,"column":48,"nodeType":"226","messageId":"227","endLine":73,"endColumn":50},{"ruleId":"224","severity":1,"message":"225","line":109,"column":44,"nodeType":"226","messageId":"227","endLine":109,"endColumn":46},{"ruleId":"224","severity":1,"message":"225","line":115,"column":51,"nodeType":"226","messageId":"227","endLine":115,"endColumn":53},{"ruleId":"240","severity":1,"message":"241","line":177,"column":54,"nodeType":"242","endLine":177,"endColumn":86},{"ruleId":"213","severity":1,"message":"243","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":31},{"ruleId":"224","severity":1,"message":"231","line":40,"column":123,"nodeType":"226","messageId":"227","endLine":40,"endColumn":125},{"ruleId":"213","severity":1,"message":"244","line":6,"column":15,"nodeType":"215","messageId":"216","endLine":6,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":33,"column":28,"nodeType":"226","messageId":"227","endLine":33,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":42,"column":28,"nodeType":"226","messageId":"227","endLine":42,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":50,"column":33,"nodeType":"226","messageId":"227","endLine":50,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":91,"column":49,"nodeType":"226","messageId":"227","endLine":91,"endColumn":51},{"ruleId":"224","severity":1,"message":"225","line":129,"column":45,"nodeType":"226","messageId":"227","endLine":129,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":133,"column":52,"nodeType":"226","messageId":"227","endLine":133,"endColumn":54},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'handleTabs' is assigned a value but never used.","'patients' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'patientsHealth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["245"],["246"],"Expected '!==' and instead saw '!='.","'patientsDiseases' is assigned a value but never used.","'employees' is assigned a value but never used.","'employeesSpecialization' is assigned a value but never used.","'rooms' is assigned a value but never used.","'room_entries' is assigned a value but never used.","'roomsAvailability' is assigned a value but never used.","'roomAvailability' is assigned a value but never used.","'beds' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'bedsAvailability' is assigned a value but never used.","'bedAvailability' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]